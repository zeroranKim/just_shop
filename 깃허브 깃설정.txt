깃허브 깃설정 및 커밋 & 푸쉬 & 배포 & 페이징
id : zeroranKim
email : zeroran96@gmail.com
pw : Kim0ran2!


- 웹환경 셋팅
1. 웹브라우저 열기 - GitHub 로그인
2. 리파지토리 (Repositories) 만들기

- 로컬 프로젝트 작업위치 
3. GitBash에서 경로(목록)확인 
   li -la
   숨김파일까지 모두 보기 (-la)
   $ ls -la
   total 1189
   drwxr-xr-x 1 Administrator 197121       0 12월  5 09:56 ./
   drwxr-xr-x 1 Administrator 197121       0 12월  5 09:52 ../
   -rw-r--r-- 1 Administrator 197121     310 11월 25 14:10 .gitignore       
   -rw-r--r-- 1 Administrator 197121     835 11월 25 14:50 package.json     
   -rw-r--r-- 1 Administrator 197121 1200250 11월 25 15:12 package-lock.json
   drwxr-xr-x 1 Administrator 197121       0 12월  5 09:56 public/
   -rw-r--r-- 1 Administrator 197121    3359 11월 25 14:10 README.md
   drwxr-xr-x 1 Administrator 197121       0 12월  5 09:56 src/

4. 깃설정 // c드라이브에서 할 경우 루트에서 작업하기
   $ git init 
   Initialized empty Git repository in 
   D:/국기프앤3기_김영란/01_실습/12월/1205_JUST_SHOP_GitHub_배포/.git/

5. 목록확인 다시 한 번 하기 (깃설정 목록확인)
   $ ls -la li 아님!!!!!
   total 1517
   drwxr-xr-x 1 Administrator 197121       0 12월  5 10:21  ./
   drwxr-xr-x 1 Administrator 197121       0 12월  5 09:52  ../
   drwxr-xr-x 1 Administrator 197121       0 12월  5 10:21  .git/ => 깃허브에 올릴 때 원격으로 파일을 터미널 방법으로 업로드 하게 해주는 프로그램들이 있음
   -rw-r--r-- 1 Administrator 197121     310 11월 25 14:10  .gitignore
   drwxr-xr-x 1 Administrator 197121       0 12월  5 10:04  node_modules/
   -rw-r--r-- 1 Administrator 197121     835 11월 25 14:50  package.json
   -rw-r--r-- 1 Administrator 197121 1200250 12월  5 10:04  package-lock.json
   drwxr-xr-x 1 Administrator 197121       0 12월  5 09:56  public/
   -rw-r--r-- 1 Administrator 197121    3359 11월 25 14:10  README.md
   drwxr-xr-x 1 Administrator 197121       0 12월  5 10:03  src/
   -rw-r--r-- 1 Administrator 197121    1225 12월  5 10:22 '깃허브 깃설정.txt'

- 깃 환경설정(git config)

6. user(사용자) 이름, user email (로그인 정보 입력)
   아이디 : git config user.name 'zeroranKim'
   이메일 : git config user.email 'zeroran96@gmail.com'

화면청소 : clear 

6-1. name,email 확인하기

   git config user.name
   git config user.email


7. 깃허브 원격지 리파지토리(저장소) 주소 추가 지정 origin(url)
   git remote add origin https://github.com/zeroranKim/just_shop.git

7-1. 리파지토리 주소 확인하기
   git remote -v

   $ git remote -v
   origin  https://github.com/zeroranKim/just_shop.git (fetch) => 가져올때, 다운로드 
   origin  https://github.com/zeroranKim/just_shop.git (push) => 내보낼때, 업로드

7-2. 만약 잘못된 주소면 삭제하기
   git remote remove origin
   삭제 후 확인 git remote -v


8. 스테이징하기 
   스테이징 : 깃허브에 파일 올릴 것을 무대에 올린다? 파일 올릴 준비
   . => 모든(all) 파일 스테이징하기
   git add .


9. 커밋하기
   커밋(commit) : 최종점검
   -m : 메세지, 코멘트의 기능
   git commit -m '리액트 create-react-app JUSt SHOPPINGMALL' 


10. 푸쉬하기(push, 업로드)
   git push origin master

   $ git push origin master
   info: please complete authentication in your browser...
   Enumerating objects: 46, done.
   Counting objects: 100% (46/46), done.
   Delta compression using up to 4 threads
   Compressing objects: 100% (46/46), done.
   Writing objects: 100% (46/46), 1.36 MiB | 3.22 MiB/s, done.
   Total 46 (delta 0), reused 0 (delta 0), pack-reused 0
   To https://github.com/zeroranKim/just_shop.git
    * [new branch]      master -> master



! etc. 수정할 경우 !
   웹페이지 / 파일 수정
   스테이징 부터 다시해서 푸쉬하기 
   git add .
   git commit -m '리액트 create-react-app JUSt SHOPPINGMALL js를 jsx수정 ' 
   git push origin master